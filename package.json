{
	"name": "eslint-plugin-unicorn",
	"version": "19.0.1",
	"description": "Various awesome ESLint rules",
	"license": "MIT",
	"repository": "sindresorhus/eslint-plugin-unicorn",
	"funding": "https://github.com/sindresorhus/eslint-plugin-unicorn?sponsor=1",
	"author": {
		"name": "Sindre Sorhus",
		"email": "sindresorhus@gmail.com",
		"url": "https://sindresorhus.com"
	},
	"engines": {
		"node": ">=10"
	},
	"scripts": {
		"test": "xo && nyc ava",
		"lint": "node ./test/lint/lint.js",
		"integration": "node ./test/integration/test.js"
	},
	"files": [
		"index.js",
		"rules"
	],
	"keywords": [
		"eslint",
		"eslintplugin",
		"eslint-plugin",
		"unicorn",
		"linter",
		"lint",
		"style",
		"xo"
	],
	"dependencies": {
		"ci-info": "^2.0.0",
		"clean-regexp": "^1.0.0",
		"eslint-ast-utils": "^1.1.0",
		"eslint-template-visitor": "^1.1.0",
		"eslint-utils": "^2.0.0",
		"import-modules": "^2.0.0",
		"lodash": "^4.17.15",
		"read-pkg-up": "^7.0.1",
		"regexp-tree": "^0.1.21",
		"reserved-words": "^0.1.2",
		"safe-regex": "^2.1.1",
		"semver": "^7.3.2"
	},
	"devDependencies": {
		"@ava/babel": "^1.0.1",
		"@lubien/fixture-beta-package": "^1.0.0-beta.1",
		"@typescript-eslint/parser": "^2.30.0",
		"ava": "^3.8.1",
		"babel-eslint": "^10.1.0",
		"chalk": "^4.0.0",
		"eslint": "^7.0.0",
		"eslint-ava-rule-tester": "^4.0.0",
		"eslint-plugin-eslint-plugin": "^2.2.1",
		"execa": "^4.0.0",
		"listr": "^0.14.3",
		"nyc": "^15.0.1",
		"outdent": "^0.7.1",
		"pify": "^5.0.0",
		"typescript": "^3.8.3",
		"vue-eslint-parser": "^7.0.0",
		"xo": "^0.30.0"
	},
	"peerDependencies": {
		"eslint": ">=7.0.0"
	},
	"ava": {
		"babel": true,
		"files": [
			"test/*.js"
		]
	},
	"nyc": {
		"reporter": [
			"text",
			"lcov"
		]
	},
	"xo": {
		"parserOptions": {
			"sourceType": "script"
		},
		"plugins": [
			"eslint-plugin"
		],
		"extends": [
			"plugin:eslint-plugin/all"
		],
		"overrides": [
			{
				"files": "rules/utils/*.js",
				"rules": {
					"eslint-plugin/require-meta-docs-url": "off"
				}
			},
			{
				"files": "test/*.js",
				"parserOptions": {
					"sourceType": "module"
				}
			}
		],
		"rules": {
			"strict": "error",
			"array-callback-return": [
				"error",
				{
					"allowImplicit": true
				}
			],
			"unicorn/no-null": "error",
			"unicorn/string-content": "off"
		}
	}
}
